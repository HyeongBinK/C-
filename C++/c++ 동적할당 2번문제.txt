#include <iostream>
#include <string>
#include<Windows.h>
using namespace std;

#define STUDENTMAX 10
#define NO 100
#define ON 99

struct Student
{
	string Name;
	int Age;
	int Class;
	int KoreaScore;
	int EngScore;
	int MathScore;
	int SumScore;
	float AvgScore;
	char Grade;
};

bool IntCheck(int Start, int End, int Check)
{
	if (Check >= Start && Check <= End)
		return true;
	else return false;
}

void ShowMenu(int StudentNum)
{
	system("cls");
	cout << "===학생정보관리===<학생수 : " << StudentNum << "명>" << endl;
	cout << "1.학생등록" << endl;
	cout << "2.학생정보 보기" << endl;
	cout << "3.학생 검색" << endl;
	cout << "4.등급별 보기" << endl;
	cout << "5.학년별 보기" << endl;
	cout << "6.종료" << endl;
	cout << "입력 : ";
}

void DataInput(int* StudentCount, Student* S_L)
{
	system("cls");
	cout << "======" << (*StudentCount)+1 << "번쨰 학생======" << endl;
	cout << "이름 : ";
	cin >> S_L->Name;
	cout << "나이 : ";
	cin >> S_L->Age;
	while (1)
	{
		cout << "학년 : ";
		cin >> S_L->Class;
		if (IntCheck(1, 3, S_L->Class) == true)
			break;
		else
			cout << "학년 범위 잘못 입력(1 ~ 3 학년사이로 입력하세요!)\n";

	}
	while (1)
	{
		cout << "국어 : ";
		cin >> S_L->KoreaScore;
		if (IntCheck(0, 100, S_L->KoreaScore) == true)
			break;
		else
			cout << "점수 범위 잘못 입력(0 ~ 100 점사이로 입력하세요!)\n";

	}
	while (1)
	{
		cout << "영어 : ";
		cin >> S_L->EngScore;
		if (IntCheck(0, 100, S_L->EngScore) == true)
			break;
		else
			cout << "점수 범위 잘못 입력(0 ~ 100 점사이로 입력하세요!)\n";

	}
	while (1)
	{
		cout << "수학 : ";
		cin >> S_L->MathScore;
		if (IntCheck(0, 100, S_L->MathScore) == true)
			break;
		else
			cout << "점수 범위 잘못 입력(0 ~ 100 점사이로 입력하세요!)\n";
	}

	(S_L->SumScore) = (S_L->KoreaScore) + (S_L->EngScore) + (S_L->MathScore);
	(S_L->AvgScore) = (float)(S_L->SumScore) / 3.0000;

	if ((S_L->AvgScore) >= 90)
		(S_L->Grade) = 'A';
	else if ((S_L->AvgScore) >= 80)
		(S_L->Grade) = 'B';
	else if ((S_L->AvgScore) >= 70)
		(S_L->Grade) = 'C';
	else if ((S_L->AvgScore) >= 60)
		(S_L->Grade) = 'D';
	else
		(S_L->Grade) = 'F';
	
	(*StudentCount)++;

}

void ShowStudentData(int StudentNumber, Student* S_L)
{
	cout << "======" << StudentNumber+1 << "번쨰 학생======" << endl;
	cout << "이름 : " << S_L->Name << endl;
	cout << "나이 : " << S_L->Age << endl;
	cout << "학년 : " << S_L->Class << endl;
	cout << "국어점수 : " << S_L->KoreaScore << endl;
	cout << "영어점수 : " << S_L->EngScore << endl;
	cout << "수학 점수: " << S_L->MathScore << endl;
	cout << "합계 점수 : " << S_L->SumScore << "\t";
	cout << "평균 점수 : " << S_L->AvgScore << endl;
	cout << "등급 : " << "[" << S_L->Grade << "]" << endl;

}

void ShowGrade(Student** S_L, int StudentCount, char Grade)
{
	cout << "┌─────────" << Grade << "등급─────────┐\n";
	for (int i = 0; i < StudentCount; i++)
	{
		if (S_L[i]->Grade == Grade)
			ShowStudentData(i , S_L[i]);
	}
	printf("└─────────────────────┘\n");
}

void ShowClass(Student** S_L, int StudentCount, int Class)
{
	cout << "┌─────────" << Class << "학년─────────┐\n";
	for (int i = 0; i < StudentCount; i++)
	{
		if (S_L[i]->Class == Class)
			ShowStudentData(i, S_L[i]);
	}
	printf("└─────────────────────┘\n");
}


void main()
{
	Student* Student_List[STUDENTMAX];
	int StudentCount= 0;
	int Select;
	string SearchStudentName;
	int SearchFlag;

	while (1)
	{
		ShowMenu(StudentCount);
		cin >> Select;
		switch (Select)
		{
		case 1:
			Student_List[StudentCount] = new Student;
			DataInput(&StudentCount, Student_List[StudentCount]);
			break;
		case 2:
			system("cls");
			for (int i = 0; i < StudentCount; i++)
				ShowStudentData(i, Student_List[i]);

			system("pause");
			break;
		case 3:
			system("cls");
			SearchFlag = NO;
			cout << "이름 입력 : ";
			cin >> SearchStudentName;
			for (int i = 0; i < StudentCount; i++)
			{
				if (SearchStudentName == Student_List[i]->Name)
				{
					ShowStudentData(i, Student_List[i]);
					SearchFlag = ON;
				}
				else if (i == StudentCount - 1 && SearchFlag == NO)
					cout << "해당이름 학생없음" << endl;
			}
			system("pause");
			break;
		case 4:
			system("cls");
			for(char Grade = 'A'; Grade <= 'F'; Grade++)
				ShowGrade(Student_List, StudentCount, Grade);
			system("pause");

			break;
		case 5:
			system("cls");
			for (int Class = 1; Class <= 3; Class++)
				ShowClass(Student_List, StudentCount, Class);
			system("pause");

			break;
		case 6:
			for (int i = 0; i < StudentCount; i++)
			{
				cout << i + 1 << "번째 학생 :" << Student_List[i]->Name << endl;
				delete Student_List[i];
				cout << "할당해제 완료" << endl;
			}
			return;

		}

	}
	
}